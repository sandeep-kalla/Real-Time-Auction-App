/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WebsocketTestRouteImport } from './routes/websocket-test'
import { Route as NotificationsRouteImport } from './routes/notifications'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SellNewRouteImport } from './routes/sell/new'
import { Route as SellMineRouteImport } from './routes/sell/mine'
import { Route as CounterOffersPendingRouteImport } from './routes/counter-offers/pending'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuctionIdRouteImport } from './routes/auction/$id'

const WebsocketTestRoute = WebsocketTestRouteImport.update({
  id: '/websocket-test',
  path: '/websocket-test',
  getParentRoute: () => rootRouteImport,
} as any)
const NotificationsRoute = NotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SellNewRoute = SellNewRouteImport.update({
  id: '/sell/new',
  path: '/sell/new',
  getParentRoute: () => rootRouteImport,
} as any)
const SellMineRoute = SellMineRouteImport.update({
  id: '/sell/mine',
  path: '/sell/mine',
  getParentRoute: () => rootRouteImport,
} as any)
const CounterOffersPendingRoute = CounterOffersPendingRouteImport.update({
  id: '/counter-offers/pending',
  path: '/counter-offers/pending',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuctionIdRoute = AuctionIdRouteImport.update({
  id: '/auction/$id',
  path: '/auction/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/notifications': typeof NotificationsRoute
  '/websocket-test': typeof WebsocketTestRoute
  '/auction/$id': typeof AuctionIdRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/counter-offers/pending': typeof CounterOffersPendingRoute
  '/sell/mine': typeof SellMineRoute
  '/sell/new': typeof SellNewRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/notifications': typeof NotificationsRoute
  '/websocket-test': typeof WebsocketTestRoute
  '/auction/$id': typeof AuctionIdRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/counter-offers/pending': typeof CounterOffersPendingRoute
  '/sell/mine': typeof SellMineRoute
  '/sell/new': typeof SellNewRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/notifications': typeof NotificationsRoute
  '/websocket-test': typeof WebsocketTestRoute
  '/auction/$id': typeof AuctionIdRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/counter-offers/pending': typeof CounterOffersPendingRoute
  '/sell/mine': typeof SellMineRoute
  '/sell/new': typeof SellNewRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/notifications'
    | '/websocket-test'
    | '/auction/$id'
    | '/auth/login'
    | '/auth/register'
    | '/counter-offers/pending'
    | '/sell/mine'
    | '/sell/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/notifications'
    | '/websocket-test'
    | '/auction/$id'
    | '/auth/login'
    | '/auth/register'
    | '/counter-offers/pending'
    | '/sell/mine'
    | '/sell/new'
  id:
    | '__root__'
    | '/'
    | '/notifications'
    | '/websocket-test'
    | '/auction/$id'
    | '/auth/login'
    | '/auth/register'
    | '/counter-offers/pending'
    | '/sell/mine'
    | '/sell/new'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotificationsRoute: typeof NotificationsRoute
  WebsocketTestRoute: typeof WebsocketTestRoute
  AuctionIdRoute: typeof AuctionIdRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  CounterOffersPendingRoute: typeof CounterOffersPendingRoute
  SellMineRoute: typeof SellMineRoute
  SellNewRoute: typeof SellNewRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/websocket-test': {
      id: '/websocket-test'
      path: '/websocket-test'
      fullPath: '/websocket-test'
      preLoaderRoute: typeof WebsocketTestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notifications': {
      id: '/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof NotificationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sell/new': {
      id: '/sell/new'
      path: '/sell/new'
      fullPath: '/sell/new'
      preLoaderRoute: typeof SellNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sell/mine': {
      id: '/sell/mine'
      path: '/sell/mine'
      fullPath: '/sell/mine'
      preLoaderRoute: typeof SellMineRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/counter-offers/pending': {
      id: '/counter-offers/pending'
      path: '/counter-offers/pending'
      fullPath: '/counter-offers/pending'
      preLoaderRoute: typeof CounterOffersPendingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auction/$id': {
      id: '/auction/$id'
      path: '/auction/$id'
      fullPath: '/auction/$id'
      preLoaderRoute: typeof AuctionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotificationsRoute: NotificationsRoute,
  WebsocketTestRoute: WebsocketTestRoute,
  AuctionIdRoute: AuctionIdRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  CounterOffersPendingRoute: CounterOffersPendingRoute,
  SellMineRoute: SellMineRoute,
  SellNewRoute: SellNewRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
